name: Build CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          # 显式指定较新的构建工具版本
          build-tools-version: "34.0.0"  # 或 "33.0.0"
          # 添加 ndk-bundle 以防需要
          ndk-version: "25.2.9519653"

      - name: setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew assembleRelease -x signRelease

      # 确保 .android 目录存在
      - name: Create Android directory
        run: mkdir -p $HOME/.android

      # 生成调试密钥库（如果不存在）
      - name: Generate debug keystore
        run: |
          if [ ! -f $HOME/.android/debug.keystore ]; then
            keytool -genkeypair \
              -alias androiddebugkey \
              -keypass android \
              -keystore $HOME/.android/debug.keystore \
              -storepass android \
              -dname "CN=Android Debug,O=Android,C=US" \
              -validity 3650 \
              -keyalg RSA \
              -keysize 2048 \
              -storetype JKS  # 明确指定 JKS 格式
          fi
          # 列出密钥库信息（验证）
          keytool -list -v -keystore $HOME/.android/debug.keystore -storepass android

      # 使用最新构建工具签名 APK
      - name: Sign APK with debug key
        run: |
          # 获取最新的构建工具版本
          BUILD_TOOLS_PATH=$(find $ANDROID_HOME/build-tools -maxdepth 1 -type d | sort -V | tail -n1)
          echo "Using build tools: $BUILD_TOOLS_PATH"
          
          # 查找 APK 文件
          RELEASE_DIR="${{ github.workspace }}/app/build/outputs/apk/release"
          APK_FILE=$(find "$RELEASE_DIR" -name "*.apk" ! -name "*unaligned*" ! -name "*signed*" -print -quit)
          
          if [ -z "$APK_FILE" ]; then
            echo "Error: No APK file found in $RELEASE_DIR"
            ls -la "$RELEASE_DIR"
            exit 1
          fi
          
          echo "Found APK to sign: $APK_FILE"
          SIGNED_APK="${APK_FILE%.apk}-signed.apk"
          
          # 使用 apksigner 签名
          "$BUILD_TOOLS_PATH/apksigner" sign \
            --ks $HOME/.android/debug.keystore \
            --ks-pass pass:android \
            --key-pass pass:android \
            --out "$SIGNED_APK" \
            "$APK_FILE"
          
          echo "Signed APK created at: $SIGNED_APK"
          
          # 验证签名
          "$BUILD_TOOLS_PATH/apksigner" verify --verbose "$SIGNED_APK"

      - name: Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/app/build/outputs/apk/release/*signed.apk
          if-no-files-found: error
