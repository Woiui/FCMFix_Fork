name: Build CI with Debug Signing

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 修改构建命令，确保生成未签名APK
      - name: Build with Gradle
        run: ./gradlew assembleRelease -x signRelease
        
      # 列出构建产物以验证
      - name: List build outputs
        run: ls -la ${{ github.workspace }}/app/build/outputs/apk/release

      # 确保 .android 目录存在
      - name: Create Android directory
        run: mkdir -p $HOME/.android

      # 生成调试密钥库（如果不存在）
      - name: Generate debug keystore
        run: |
          if [ ! -f $HOME/.android/debug.keystore ]; then
            keytool -genkeypair \
              -alias androiddebugkey \
              -keypass android \
              -keystore $HOME/.android/debug.keystore \
              -storepass android \
              -dname "CN=Android Debug,O=Android,C=US" \
              -validity 3650 \
              -keyalg RSA \
              -keysize 2048
          fi
          # 列出密钥库信息（验证）
          keytool -list -v -keystore $HOME/.android/debug.keystore -storepass android

      # 签名 APK - 改进的文件查找逻辑
      - name: Sign APK with debug key
        run: |
          # 查找所有APK文件（不再限于"unsigned"）
          APK_FILES=($(find ${{ github.workspace }}/app/build/outputs/apk/release -name "*.apk"))
          
          if [ ${#APK_FILES[@]} -eq 0 ]; then
            echo "Error: No APK files found in release directory!"
            exit 1
          fi
          
          # 选择第一个找到的APK文件进行签名
          UNSIGNED_APK=${APK_FILES[0]}
          echo "Found APK to sign: $UNSIGNED_APK"
          
          # 设置输出路径
          SIGNED_APK="${UNSIGNED_APK%.apk}-debug-signed.apk"
          
          # 使用 jarsigner 签名
          jarsigner -verbose \
            -keystore $HOME/.android/debug.keystore \
            -storepass android \
            -keypass android \
            -signedjar "$SIGNED_APK" \
            "$UNSIGNED_APK" \
            androiddebugkey
          
          echo "Signed APK created at: $SIGNED_APK"
          
          # 验证签名
          jarsigner -verify -verbose "$SIGNED_APK"

      # 上传签名后的 APK
      - name: Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-signed-apk
          path: ${{ github.workspace }}/app/build/outputs/apk/release/*debug-signed.apk
          if-no-files-found: error
